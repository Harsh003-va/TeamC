{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Documents\\\\GitHub\\\\TeamC\\\\client\\\\src\\\\components\\\\body\\\\book\\\\components\\\\book.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Button, Form } from \"reactstrap\";\nimport Table from \"./table\";\nexport default (props => {\n  const [totalTables, setTotalTables] = useState([]);\n  const [email, setEmail] = useState(\"\");\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    const res = await fetch(\"/confirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n\n    if (data.status === 401 || !data) {\n      console.log(\"error\");\n    } else {\n      setEmail(\"\");\n      console.log(\"Email sent\");\n    }\n  }; // User's selections\n\n\n  const [selection, setSelection] = useState({\n    table: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    location: \"Any Location\",\n    size: 0\n  }); // User's booking details\n\n  const [booking, setBooking] = useState({\n    name: \"\",\n    phone: \"\"\n  }); // List of potential locations\n\n  const [locations] = useState([\"Any Location\", \"Patio\", \"Inside\", \"Bar\"]);\n  const [times] = useState([\"9AM\", \"10AM\", \"11AM\", \"12PM\", \"1PM\", \"2PM\", \"3PM\", \"4PM\", \"5PM\"]); // Basic reservation \"validation\"\n\n  const [reservationError, setReservationError] = useState(false);\n\n  const getDate = _ => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = months[selection.date.getMonth()] + \" \" + selection.date.getDate() + \" \" + selection.date.getFullYear();\n    let time = selection.time.slice(0, -2);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  };\n\n  const getEmptyTables = _ => {\n    let tables = totalTables.filter(table => table.isAvailable);\n    return tables.length;\n  };\n\n  useEffect(() => {\n    // Check availability of tables from DB when a date and time is selected\n    if (selection.time && selection.date) {\n      (async _ => {\n        let datetime = getDate();\n        let res = await fetch(\"http://localhost:5000/availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: datetime\n          })\n        });\n        res = await res.json(); // Filter available tables with location and group size criteria\n\n        let tables = res.tables.filter(table => (selection.size > 0 ? table.capacity >= selection.size : true) && (selection.location !== \"Any Location\" ? table.location === selection.location : true));\n        setTotalTables(tables);\n      })();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selection.time, selection.date, selection.size, selection.location]); // Make the reservation if all details are filled out\n\n  const reserve = async _ => {\n    if (booking.name.length === 0 | booking.phone.length === 0) {\n      console.log(\"Incomplete Details\");\n      setReservationError(true);\n    } else {\n      const datetime = getDate();\n      let res = await fetch(\"http://localhost:5000/reserve\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ ...booking,\n          date: datetime,\n          table: selection.table.id\n        })\n      });\n      res = await res.text();\n      console.log(\"Reserved: \" + res);\n      props.setPage(2);\n    }\n  }; // Clicking on a table sets the selection state\n\n\n  const selectTable = (table_name, table_id) => {\n    setSelection({ ...selection,\n      table: {\n        name: table_name,\n        id: table_id\n      }\n    });\n  }; // Generate party size dropdown\n\n\n  const getSizes = _ => {\n    let newSizes = [];\n\n    for (let i = 1; i < 8; i++) {\n      newSizes.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: i,\n        className: \"booking-dropdown-item\",\n        onClick: e => {\n          let newSel = { ...selection,\n            table: { ...selection.table\n            },\n            size: i\n          };\n          setSelection(newSel);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, i));\n    }\n\n    return newSizes;\n  }; // Generate locations dropdown\n\n\n  const getLocations = _ => {\n    let newLocations = [];\n    locations.forEach(loc => {\n      newLocations.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: loc,\n        className: \"booking-dropdown-item\",\n        onClick: _ => {\n          let newSel = { ...selection,\n            table: { ...selection.table\n            },\n            location: loc\n          };\n          setSelection(newSel);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, loc));\n    });\n    return newLocations;\n  }; // Generate locations dropdown\n\n\n  const getTimes = _ => {\n    let newTimes = [];\n    times.forEach(time => {\n      newTimes.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: time,\n        className: \"booking-dropdown-item\",\n        onClick: _ => {\n          let newSel = { ...selection,\n            table: { ...selection.table\n            },\n            time: time\n          };\n          setSelection(newSel);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, time));\n    });\n    return newTimes;\n  }; // Generating tables from available tables state\n\n\n  const getTables = _ => {\n    console.log(\"Getting tables\");\n\n    if (getEmptyTables() > 0) {\n      let tables = [];\n      totalTables.forEach(table => {\n        if (table.isAvailable) {\n          tables.push( /*#__PURE__*/React.createElement(Table, {\n            key: table._id,\n            id: table._id,\n            chairs: table.capacity,\n            name: table.name,\n            empty: true,\n            selectTable: selectTable,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 13\n            }\n          }));\n        } else {\n          tables.push( /*#__PURE__*/React.createElement(Table, {\n            key: table._id,\n            id: table._id,\n            chairs: table.capacity,\n            name: table.name,\n            selectTable: selectTable,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 13\n            }\n          }));\n        }\n      });\n      return tables;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"text-center align-items-center pizza-cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"looking-for-pizza\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, !selection.table.id ? \"Book a Table\" : \"Confirm Reservation\", /*#__PURE__*/React.createElement(\"i\", {\n    className: !selection.table.id ? \"fas fa-chair pizza-slice\" : \"fas fa-clipboard-check pizza-slice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"selected-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, selection.table.id ? \"You are booking \" + selection.table.name : null), reservationError ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"reservation-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, \"* Please fill out all of the details.\") : null)), !selection.table.id ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"reservation-stuff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"text-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    required: \"required\",\n    className: \"booking-dropdown\",\n    value: selection.date.toISOString().split(\"T\")[0],\n    onChange: e => {\n      if (!isNaN(new Date(new Date(e.target.value)))) {\n        let newSel = { ...selection,\n          table: { ...selection.table\n          },\n          date: new Date(e.target.value)\n        };\n        setSelection(newSel);\n      } else {\n        console.log(\"Invalid date\");\n        let newSel = { ...selection,\n          table: { ...selection.table\n          },\n          date: new Date()\n        };\n        setSelection(newSel);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"none\",\n    caret: true,\n    className: \"booking-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, selection.time === null ? \"Select a Time\" : selection.time), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    className: \"booking-dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, getTimes()))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"none\",\n    caret: true,\n    className: \"booking-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, selection.location), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    className: \"booking-dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, getLocations()))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"none\",\n    caret: true,\n    className: \"booking-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, selection.size === 0 ? \"Select a Party Size\" : selection.size.toString()), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    className: \"booking-dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, getSizes())))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"tables-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, getEmptyTables() > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"available-tables\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }, getEmptyTables(), \" available\") : null, selection.date && selection.time ? getEmptyTables() > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  }), \" \\xA0 Available \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"full-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 23\n    }\n  }), \" \\xA0 Unavailable \\xA0\\xA0\"), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 21\n    }\n  }, getTables())) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"table-display-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 19\n    }\n  }, \"No Available Tables\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"table-display-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, \"Please select a date and time for your reservation.\")))) : /*#__PURE__*/React.createElement(Form, {\n    onClick: reserve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"confirm-reservation-stuff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"text-center justify-content-center reservation-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    className: \"reservation-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    bsSize: \"lg\",\n    placeholder: \"Name\",\n    name: \"name\",\n    className: \"reservation-input\",\n    value: booking.name,\n    onChange: e => {\n      setBooking({ ...booking,\n        name: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    className: \"reservation-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    bsSize: \"lg\",\n    name: \"phone\",\n    placeholder: \"Phone Number\",\n    className: \"reservation-input\",\n    value: booking.phone,\n    onChange: e => {\n      setBooking({ ...booking,\n        phone: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    sm: \"3\",\n    className: \"reservation-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    bsSize: \"lg\",\n    name: \"user_email\",\n    placeholder: \"Email\",\n    className: \"reservation-input\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"none\",\n    className: \"book-table-btn\",\n    onClick: sendEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 15\n    }\n  }, \"Book Now\"))))));\n});","map":{"version":3,"sources":["C:/Users/harsh/OneDrive/Documents/GitHub/TeamC/client/src/components/body/book/components/book.js"],"names":["React","useState","useEffect","Row","Col","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Input","Button","Form","Table","props","totalTables","setTotalTables","email","setEmail","sendEmail","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","status","selection","setSelection","table","name","id","date","Date","time","location","size","booking","setBooking","phone","locations","times","reservationError","setReservationError","getDate","_","months","getMonth","getFullYear","slice","datetime","getEmptyTables","tables","filter","isAvailable","length","capacity","reserve","text","setPage","selectTable","table_name","table_id","getSizes","newSizes","i","push","newSel","getLocations","newLocations","forEach","loc","getTimes","newTimes","getTables","_id","toISOString","split","isNaN","target","value","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Button,\n  Form\n} from \"reactstrap\";\n\nimport Table from \"./table\";\n\n\nexport default props => {\n  const [totalTables, setTotalTables] = useState([]);\n\n\n  \n\n  const [email, setEmail] = useState(\"\");\n\n\n  const sendEmail = async (e) => {\n      e.preventDefault();\n\n      const res = await fetch(\"/confirm\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n              email\n          })\n      });\n\n      const data = await res.json();\n      console.log(data);\n\n      if (data.status === 401 || !data) {\n          console.log(\"error\")\n      } else {\n          \n          setEmail(\"\")\n          console.log(\"Email sent\")\n      }\n  }\n\n  // User's selections\n  const [selection, setSelection] = useState({\n    table: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    location: \"Any Location\",\n    size: 0\n  });\n\n  // User's booking details\n  const [booking, setBooking] = useState({\n    name: \"\",\n    phone: \"\",\n  \n  });\n\n  // List of potential locations\n  const [locations] = useState([\"Any Location\", \"Patio\", \"Inside\", \"Bar\"]);\n  const [times] = useState([\n    \"9AM\",\n    \"10AM\",\n    \"11AM\",\n    \"12PM\",\n    \"1PM\",\n    \"2PM\",\n    \"3PM\",\n    \"4PM\",\n    \"5PM\"\n  ]);\n  // Basic reservation \"validation\"\n  const [reservationError, setReservationError] = useState(false);\n\n  const getDate = _ => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    const date =\n      months[selection.date.getMonth()] +\n      \" \" +\n      selection.date.getDate() +\n      \" \" +\n      selection.date.getFullYear();\n    let time = selection.time.slice(0, -2);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  };\n\n  const getEmptyTables = _ => {\n    let tables = totalTables.filter(table => table.isAvailable);\n    return tables.length;\n  };\n\n  useEffect(() => {\n    // Check availability of tables from DB when a date and time is selected\n    if (selection.time && selection.date) {\n      (async _ => {\n        let datetime = getDate();\n        let res = await fetch(\"http://localhost:5000/availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: datetime\n          })\n        });\n        res = await res.json();\n        // Filter available tables with location and group size criteria\n        let tables = res.tables.filter(\n          table =>\n            (selection.size > 0 ? table.capacity >= selection.size : true) &&\n            (selection.location !== \"Any Location\"\n              ? table.location === selection.location\n              : true)\n        );\n        setTotalTables(tables);\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selection.time, selection.date, selection.size, selection.location]);\n\n  // Make the reservation if all details are filled out\n  const reserve = async _ => {\n    if (\n      (booking.name.length === 0) |\n      (booking.phone.length === 0) \n     \n    ) {\n      console.log(\"Incomplete Details\");\n      setReservationError(true);\n    } else {\n      const datetime = getDate();\n      let res = await fetch(\"http://localhost:5000/reserve\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...booking,\n          date: datetime,\n          table: selection.table.id\n        })\n      });\n      res = await res.text();\n\n      console.log(\"Reserved: \" + res);\n      props.setPage(2);\n    }\n  };\n\n  // Clicking on a table sets the selection state\n  const selectTable = (table_name, table_id) => {\n    setSelection({\n      ...selection,\n      table: {\n        name: table_name,\n        id: table_id\n      }\n    });\n  };\n\n  // Generate party size dropdown\n  const getSizes = _ => {\n    let newSizes = [];\n\n    for (let i = 1; i < 8; i++) {\n      newSizes.push(\n        <DropdownItem\n          key={i}\n          className=\"booking-dropdown-item\"\n          onClick={e => {\n            let newSel = {\n              ...selection,\n              table: {\n                ...selection.table\n              },\n              size: i\n            };\n            setSelection(newSel);\n          }}\n        >\n          {i}\n        </DropdownItem>\n      );\n    }\n    return newSizes;\n  };\n\n  // Generate locations dropdown\n  const getLocations = _ => {\n    let newLocations = [];\n    locations.forEach(loc => {\n      newLocations.push(\n        <DropdownItem\n          key={loc}\n          className=\"booking-dropdown-item\"\n          onClick={_ => {\n            let newSel = {\n              ...selection,\n              table: {\n                ...selection.table\n              },\n              location: loc\n            };\n            setSelection(newSel);\n          }}\n        >\n          {loc}\n        </DropdownItem>\n      );\n    });\n    return newLocations;\n  };\n\n  // Generate locations dropdown\n  const getTimes = _ => {\n    let newTimes = [];\n    times.forEach(time => {\n      newTimes.push(\n        <DropdownItem\n          key={time}\n          className=\"booking-dropdown-item\"\n          onClick={_ => {\n            let newSel = {\n              ...selection,\n              table: {\n                ...selection.table\n              },\n              time: time\n            };\n            setSelection(newSel);\n          }}\n        >\n          {time}\n        </DropdownItem>\n      );\n    });\n    return newTimes;\n  };\n\n  // Generating tables from available tables state\n  const getTables = _ => {\n    console.log(\"Getting tables\");\n    if (getEmptyTables() > 0) {\n      let tables = [];\n      totalTables.forEach(table => {\n        if (table.isAvailable) {\n          tables.push(\n            <Table\n              key={table._id}\n              id={table._id}\n              chairs={table.capacity}\n              name={table.name}\n              empty\n              selectTable={selectTable}\n            />\n          );\n        } else {\n          tables.push(\n            <Table\n              key={table._id}\n              id={table._id}\n              chairs={table.capacity}\n              name={table.name}\n              selectTable={selectTable}\n            />\n          );\n        }\n      });\n      return tables;\n    }\n  };\n\n  return (\n    <div>\n      <Row noGutters className=\"text-center align-items-center pizza-cta\">\n        <Col>\n          <p className=\"looking-for-pizza\">\n            {!selection.table.id ? \"Book a Table\" : \"Confirm Reservation\"}\n            <i\n              className={\n                !selection.table.id\n                  ? \"fas fa-chair pizza-slice\"\n                  : \"fas fa-clipboard-check pizza-slice\"\n              }\n            ></i>\n          </p>\n          <p className=\"selected-table\">\n            {selection.table.id\n              ? \"You are booking \" + selection.table.name\n              : null}\n          </p>\n\n          {reservationError ? (\n            <p className=\"reservation-error\">\n              * Please fill out all of the details.\n            </p>\n          ) : null}\n        </Col>\n      </Row>\n\n      {!selection.table.id ? (\n        <div id=\"reservation-stuff\">\n          <Row noGutters className=\"text-center align-items-center\">\n            <Col xs=\"12\" sm=\"3\">\n              <input\n                type=\"date\"\n                required=\"required\"\n                className=\"booking-dropdown\"\n                value={selection.date.toISOString().split(\"T\")[0]}\n                onChange={e => {\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\n                    let newSel = {\n                      ...selection,\n                      table: {\n                        ...selection.table\n                      },\n                      date: new Date(e.target.value)\n                    };\n                    setSelection(newSel);\n                  } else {\n                    console.log(\"Invalid date\");\n                    let newSel = {\n                      ...selection,\n                      table: {\n                        ...selection.table\n                      },\n                      date: new Date()\n                    };\n                    setSelection(newSel);\n                  }\n                }}\n              ></input>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.time === null ? \"Select a Time\" : selection.time}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getTimes()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.location}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getLocations()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                  {selection.size === 0\n                    ? \"Select a Party Size\"\n                    : selection.size.toString()}\n                </DropdownToggle>\n                <DropdownMenu right className=\"booking-dropdown-menu\">\n                  {getSizes()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Col>\n          </Row>\n          <Row noGutters className=\"tables-display\">\n            <Col>\n              {getEmptyTables() > 0 ? (\n                <p className=\"available-tables\">{getEmptyTables()} available</p>\n              ) : null}\n\n              {selection.date && selection.time ? (\n                getEmptyTables() > 0 ? (\n                  <div>\n                    <div className=\"table-key\">\n                      <span className=\"empty-table\"></span> &nbsp; Available\n                      &nbsp;&nbsp;\n                      <span className=\"full-table\"></span> &nbsp; Unavailable\n                      &nbsp;&nbsp;\n                    </div>\n                    <Row noGutters>{getTables()}</Row>\n                  </div>\n                ) : (\n                  <p className=\"table-display-message\">No Available Tables</p>\n                )\n              ) : (\n                <p className=\"table-display-message\">\n                  Please select a date and time for your reservation.\n                </p>\n              )}\n            </Col>\n          </Row>\n        </div>\n      ) : (\n       <Form onClick={reserve}>\n        <div id=\"confirm-reservation-stuff\">\n          \n          <Row\n            noGutters\n            className=\"text-center justify-content-center reservation-details-container\"\n          >\n           \n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\n\n              <Input\n                type=\"text\"\n                bsSize=\"lg\"\n                placeholder=\"Name\"\n                name=\"name\"\n                className=\"reservation-input\"\n                value={booking.name}\n                onChange={e => {\n                  setBooking({\n                    ...booking,\n                    name: e.target.value\n                  });\n                }}\n              />\n            </Col>\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\n              <Input\n                type=\"text\"\n                bsSize=\"lg\"\n                name=\"phone\"\n                placeholder=\"Phone Number\"\n                className=\"reservation-input\"\n                value={booking.phone}\n                onChange={e => {\n                  setBooking({\n                    ...booking,\n                    phone: e.target.value\n                  });\n                }}\n              />\n            </Col>\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\n              <Input\n                type=\"text\"\n                bsSize=\"lg\"\n                name=\"user_email\"\n                placeholder=\"Email\"\n                className=\"reservation-input\"\n                value={email} onChange={(e) => setEmail(e.target.value)}\n                \n              />\n            </Col>\n          </Row>\n          <Row noGutters className=\"text-center\">\n            <Col>\n              <Button\n                color=\"none\"\n                className=\"book-table-btn\"\n                onClick={\n                  sendEmail\n                 \n                }\n              \n              >\n                Book Now\n              </Button>\n            </Col>\n            \n          </Row>\n          \n        </div>\n        </Form>\n       \n      )}\n    \n    </div>\n    \n  );\n  \n};\n"]},"metadata":{},"sourceType":"module"}